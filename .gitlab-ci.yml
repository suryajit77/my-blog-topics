stages:
  - test
  - report
  - deploy

docker-test:
  image: docker/compose:latest
  stage: test
  allow_failure: true
  services:
    - docker:dind
  variables:
    TESTNG_FAILED_XML: jar/test-output/testng-failed.xml
  script:
    - chmod +x ./script.sh
    - docker-compose up -d --build --scale chrome=5
    - docker wait automation-test
    - ./script.sh
    - |
      if [[ -f "$TESTNG_FAILED_XML" ]]; then
        echo "Test failures observed as TestNG-Failed file exists."
        exit 1
      else
        echo "All tests passed Successfully."
      fi
    - ls
  after_script:
    - mkdir backup && cd backup || true
    - "curl --location --output report.zip --request GET \"https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/jobs/artifacts/master/download?job=pages\" --header \"Authorization: Bearer ${CI_DEPLOY_TOKEN}\" || true"
    - (unzip report.zip) || true
    - cd ../
    - (cp -r backup/public/history/* allure-results/history) || true  
  artifacts:
    reports:
      junit:
        - jar/test-output/junitreports/TEST-*.xml
    paths:
      - jar/test-output
      - jar/screenshots
      - allure-results/
      - allure-reports/
    when: always
    expire_in: 1 week
  rules:
    - if: "$CI_COMMIT_BRANCH"
      exists:
        - Dockerfile
        - docker-compose.yml

pages:
  stage: publish
  when: always
  dependencies:
    - docker_test
  script:
    - mv allure-reports/latest/ public/
  artifacts:
    paths:
      - public
  environment:
    name: production/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}
    url: https://${CI_PROJECT_ROOT_NAMESPACE}.gitlab.io/rma-app/${CI_PROJECT_NAME}
